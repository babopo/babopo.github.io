[{"title":"Windows下Pycharm+Anaconda+Opencv图像处理环境配置","date":"2017-04-14T14:29:59.000Z","path":"2017/04/14/python-opencv/","text":"软件下载略 opencv 的库可以从这里下载： Unofficial Windows Binaries for Python Extension Packages 复制入/lib/site-packages 1pip install *.whl 进行安装 Anaconda是一个成熟的python科学计算发行版，包含很多常用的库，省去了很多麻烦 可以在这里获取licenses，并放入user/.continuum： licenses 有自己的控制台命令 1conda -h 可以查看帮助 Pycharm是功能强大的python IDE，虽然Anaconda有捆绑Spyder，但这款功能更强","tags":[{"name":"Python","slug":"Python","permalink":"//limbotech.top/tags/Python/"},{"name":"Opencv","slug":"Opencv","permalink":"//limbotech.top/tags/Opencv/"}]},{"title":"Windows下配置Hexo+GitHub博客基本步骤及遇到的问题","date":"2017-04-14T12:48:20.000Z","path":"2017/04/14/Windows下配置Hexo-GitHub博客基本步骤及遇到的问题/","text":"初衷是想找一个成本低廉又能保存一些技术学习笔记的地方，免费的OneNote对代码输入非常不友好，因此想到这样一个折中的搭建个人博客的方法，hexo用于搭建静态博客非常方便，同时能使用markdown编辑文章，而GitHub的门槛也非常低，网上教程也很多，步骤和自己遇到的一些问题如下： 安装Node.js及Git从主页下载即可，配置好git 安装hexo打开终端，输入 1npm install -g hexo 等待安装完成，无法安装可设置npm代理 1npm config set registry http://registry.cnpmjs.org 创建Hexo文件夹在预备作为储存博客页面的文件夹内打开终端，依次输入 121. hexo init #会自动创建git repo2. npm install 查看是否创建成功 121. hexo generate #生成静态页面2. hexo server #在本地启动 少用，由于路径的原因，会产生各种问题 浏览器输入默认的local:4000端口即可查看页面 创建GitHub repo注意repo名应当为username.github.io否则部署后会有问题 获取SSH密钥并添加打开终端，键入 1ssh-keygen -t rsa -C \"xxx@xx\" #后为邮箱地址 在User\\name \\ .ssh\\路径下找到id_rsa.pub 复制密钥，添加入GitHub的setting中即可 测试是否添加成功：打开终端，输入： 1ssh -T git@github.com 成功添加会提示相应字样 Hexo的配置和部署_config.yml为全局配置文件，在Deployment区域，修改为： 1234deploy: type: git repo: github: git@github.com:username/username.github.io.git,master 若要关联自己的域名令需添加CNAME文件 终端部署命令： 123hexo clean #清楚缓存hexo generatehexo deploy 在此之前可能需要输入 1npm install hexo-deployer-git --save 安装部署插件 至此，基本的配置工作已完成。 1hexo new \"title\" 可在source\\ _posts下生成“title”标题的新md文件 由于国内的特殊网络环境，访问已搭建好的页面需要输入https://username.github.io Hexo主题推荐一个主题yilia 也是本站正使用的，Reademe很详细也不再此赘述 绑定个人域名如果你有闲置的域名，可以将其绑定至刚配置好的博客页 在域名管理页的DNS控制中添加域名解析类型为A指向IP地址(在控制台中ping一下搭好的博客地址可以得到)或者添加CNAME指向域名，选择其一即可，不能同时添加 在source目录下添加名为CNAME的文件(无后缀)，内容为你要绑定的域名 修改_config.yml中的url为要绑定的域名，部署即可 关于写作在文章中加入&lt;!-- more --&gt;可以将文章截断显示在主页，防止文章过长 文章头的reward和comments分别为打赏和评论，值为True/False 1hexo new page xxx 可以新建一个名为xxx的页面，以此做了一个留言板 以下是对yilia主题的修改，增加一些功能 跟帖及留言添加评论以及留言的功能，的功能，按照lawlite的方法并没有成功，因此改用来必力的跟帖 从来比力网站获取web代码后，在themes\\yilia\\layout\\ _partial下的article.ejs最后添加即可 例如： 123456789101112131415161718&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt;&lt;div id=\"lv-container\" data-id=\"city\" data-uid=\"XXXXXXXXX\"&gt; &lt;script type=\"text/javascript\"&gt; (function(d, s) &#123; var j, e = d.getElementsByTagName(s)[0]; if (typeof LivereTower === 'function') &#123; return; &#125; j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true; e.parentNode.insertBefore(j, e); &#125;)(document, 'script'); &lt;/script&gt;&lt;noscript&gt; 为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;&lt;/div&gt;&lt;% &#125; %&gt; 最外层的标签可以取消在主页和控制文章中显示跟帖 网站访问量功能在不蒜子)获取代码后放入themes\\yilia\\layout\\ _partial下的footer.ejs中即可 在文章中插入音乐由于是在github上搭建的博客，直接从网易云获取的外链不支持https，从知乎搜索到一个解决办法 1npm install --save hexo-tag-aplayer 安装播放器插件 在A Flask Music Project. Demo项目中找到音乐链接，修改相应参数即可 例如： 1&lt;iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=329 height=100 src=\"https://music.daoapp.io/iframe?song=26513177&amp;qssl=1&amp;qlrc=1&amp;autoplay=0&amp;narrow=0\"&gt;&lt;/iframe&gt; 效果如下：","tags":[{"name":"blog","slug":"blog","permalink":"//limbotech.top/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"//limbotech.top/tags/hexo/"}]},{"title":"Hello World","date":"2017-04-14T03:24:52.222Z","path":"2017/04/14/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"Hello world","slug":"Hello-world","permalink":"//limbotech.top/tags/Hello-world/"},{"name":"随笔","slug":"随笔","permalink":"//limbotech.top/tags/随笔/"}]}]